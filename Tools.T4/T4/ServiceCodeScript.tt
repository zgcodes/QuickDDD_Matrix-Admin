<#@ template language="C#" debug="True" #>
<#@ output extension="cs" #>
<#@ assembly name="System.Core" #>
<#@ Assembly Name="$(SolutionDir)\Tools.T4\bin\Debug\Tools.T4.dll" #>
<#@ Assembly Name="$(SolutionDir)\Quick.Framework.Tool\bin\Quick.Framework.Tool.dll" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Reflection" #>
<#@ Import Namespace="System.Collections.Generic" #>
<#@ import namespace="Quick.Framework.Tool" #>
<#@ Import Namespace="Tools.T4" #>
<#@ include file="T4Toolbox.tt" #>
<#@ include file="ServiceTemplate.tt" #>

<#
    string currentPath = Path.GetDirectoryName(Host.TemplateFile);
    string solutionPath = currentPath.Substring(0, currentPath.IndexOf(@"\QuickDDD_Matrix-Admin"));

    string modelFile= Path.Combine(solutionPath, @"QuickDDD_Matrix-Admin\Quick.Domain\bin\Quick.Domain.dll");
    byte[] fileData= File.ReadAllBytes(modelFile);
    Assembly assembly = Assembly.Load(fileData);
    IEnumerable<Type> modelTypes = assembly.GetTypes().Where(m => typeof(Entity).IsAssignableFrom(m) && !m.IsAbstract);
    foreach(Type modelType in modelTypes)
    {
        T4ModelInfo model = new T4ModelInfo(modelType);
        //实体映射类
        ServiceTemplate config = new ServiceTemplate(model);
        string path = string.Format(@"{0}\Service", currentPath);
        config.Output.Encoding = Encoding.UTF8;
        config.RenderToFile(Path.Combine(path, config.FileName));
    }
#>