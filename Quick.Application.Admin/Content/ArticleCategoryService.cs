// <autogenerated>
//   This file was generated by T4 code generator CodeScript.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using Quick.Domain;
using Core.Domain.Entities;
using Quick.Repositories;
using System.Collections.Generic;
using System.Linq;
using System;
using Core.Application.Services.Dto;
using Core.Extensions;

namespace Quick.Application
{
    public class ArticleCategoryService : IArticleCategoryService
    {
        private readonly IArticleCategoryRepository _articlecategoryRepository;

        public ArticleCategoryService(IArticleCategoryRepository articlecategoryRepository)
        {
            _articlecategoryRepository = articlecategoryRepository;
        }

        public QueryRequestOut<ArticleCategoryItem> GetAll(ArticleCategoryQueryInput input)
        {
            return _articlecategoryRepository.GetAll()
                .Where(m => !m.IsDeleted)
                .WhereIf(!input.Keywords.IsNullOrWhiteSpace(), m => m.Name.Contains(input.Keywords))
                .ToOutPut<ArticleCategoryItem>(input);
        }

        public ArticleCategoryDto GetById(int id)
        {
            var entity = _articlecategoryRepository.GetById(id);
            return entity.MapTo<ArticleCategoryDto>();
        }

        public void Create(ArticleCategoryDto model)
        {
            _articlecategoryRepository.Insert(model.MapTo<ArticleCategory>());
        }

        public void Update(ArticleCategoryDto model)
        {
            var entity = _articlecategoryRepository.GetById(model.Id);
            _articlecategoryRepository.Update(model.MapTo(entity));
        }

        public void Delete(int id)
        {
            _articlecategoryRepository.Delete(id);
        }

    }
}
